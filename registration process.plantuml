@startuml
actor "Tenant Administrator" as tenant
entity Edge as edge
control "Registration Server" as reg
database "MongoDB" as db
entity "Operator Certificate Authority" as cao
entity "Tenant Certificate Authority" as cat

edge->reg: register (serial, mac, public key)
    reg -> db: check for registration profile
    db --> reg: not found
    reg ->o db: store registration request
reg -> edge: 404

... "every 2 minutes" ...
edge->reg: register (serial, mac, public key)
    reg ->o db: update "last seen"
reg ->edge: 404
... "until profile is assigned" ...

tenant -> reg: enable edge (serial, mac, tenant)
reg -> db: is edge in register mode and last seen <30 min
return current entry + metadata
reg->reg: create process token (ttl 30min)
reg->tenant: process token+edge metadata
tenant->tenant: validate metadata
tenant->reg: set or upload profile
    reg->db: store profile for edge, validity 30 min
reg->tenant: waiting for edge

edge->reg: register (serial, mac, public key)
    reg -> db: check for registration profile
    reg ->o db: mark registration as started
    db --> reg: found, return profile
    reg -> cao: request signing
    cao -> reg: signed certificate for operator
    reg -> cat: request signing
    cat -> reg: signed certificate for tenant
    reg -> db: check for older registration
    db -> reg: found, signed cert(s)
    reg ->o cao: revoke old certificate
    reg ->o cat: revoke old certificate
    reg ->o db: store new assignment
    reg ->o db: store new assignment
    reg -> reg: create activation token ttl 30 sec
    note right: all started activations without prove \nwill be automatically revoked by cron job
reg -> edge: profile + certificates + activation token
edge -> reg: send signed activation token
reg -> db: mark registration as done

edge->reg: register
    reg -> db: check for registration profile
    db --> reg: not found
    note right: because process was marked as done
    reg ->o db: store registration request
reg -> edge: 200


@enduml